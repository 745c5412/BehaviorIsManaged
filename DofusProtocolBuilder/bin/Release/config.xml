<?xml version="1.0" encoding="utf-8"?>
<ArrayOfParsingProfile xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ParsingProfile xsi:type="XmlMessagesProfile">
    <Name>Xml Messages classes</Name>
    <SourcePath>com/ankamagames/dofus/network/messages/</SourcePath>
    <OutPutPath>messages_xml/</OutPutPath>
    <EnableParsing>true</EnableParsing>
    <IgnoreMethods>false</IgnoreMethods>
    <BeforeParsingReplacementRules>
      <Item>
        <Key>
          <string>param(\d+)</string>
        </Key>
        <Value>
          <string>arg$1</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>_loc_(\d+)</string>
        </Key>
        <Value>
          <string>loc$1</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>(var\s|this\.)base(?![\w\d])</string>
        </Key>
        <Value>
          <string>$1@base</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>(var\s|this\.)object(?![\w\d])</string>
        </Key>
        <Value>
          <string>$1@object</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>(var\s|this\.)operator(?![\w\d])</string>
        </Key>
        <Value>
          <string>$1@operator</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>this\.</string>
        </Key>
        <Value>
          <string />
        </Value>
      </Item>
      <Item>
        <Key>
          <string>\bNetworkMessage</string>
        </Key>
        <Value>
          <string>Message</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>\bIDataOutput</string>
        </Key>
        <Value>
          <string>BigEndianWriter</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>\bIDataInput</string>
        </Key>
        <Value>
          <string>BigEndianReader</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>\bread(?!y)</string>
        </Key>
        <Value>
          <string>Read</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>\bwrite</string>
        </Key>
        <Value>
          <string>Write</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>(Write|Read)Unsigned([^B])</string>
        </Key>
        <Value>
          <string>$1U$2</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>ReadByte</string>
        </Key>
        <Value>
          <string>ReadSByte</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>ReadUnsignedByte</string>
        </Key>
        <Value>
          <string>ReadByte</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>flash\.geom\.</string>
        </Key>
        <Value>
          <string />
        </Value>
      </Item>
      <Item>
        <Key>
          <string>Vector\.([\w_\d]+) = new ([\w_\d]+)();</string>
        </Key>
        <Value>
          <string>$1 = new List&lt;$2&gt;();</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>new Vector\.&lt;([\d\w]+)&gt;\((\d+), (true|false)\)</string>
        </Key>
        <Value>
          <string>new List&lt;$1&gt;($2)</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>new Vector\.&lt;([\d\w]+)&gt;</string>
        </Key>
        <Value>
          <string>new List&lt;$1&gt;()</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>(__AS3__\.vec\.)?Vector\.</string>
        </Key>
        <Value>
          <string>List</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>\.push\(</string>
        </Key>
        <Value>
          <string>.Add(</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>\.length</string>
        </Key>
        <Value>
          <string>.Count</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>super\.</string>
        </Key>
        <Value>
          <string>base.</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>\b(\w+)Enum\.</string>
        </Key>
        <Value>
          <string>(byte)Enums.$1Enum.</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>arg1\.ReadBytes\(content\)</string>
        </Key>
        <Value>
          <string>content = arg1.ReadBytes()</string>
        </Value>
      </Item>
    </BeforeParsingReplacementRules>
    <IgnoredLines>
      <string>.*arguments = [\w\d]+\.ReadUShort.*</string>
    </IgnoredLines>
  </ParsingProfile>
  <ParsingProfile xsi:type="XmlTypesProfile">
    <Name>Xml Types classes</Name>
    <SourcePath>com/ankamagames/dofus/network/types/</SourcePath>
    <OutPutPath>types_xml/</OutPutPath>
    <EnableParsing>true</EnableParsing>
    <IgnoreMethods>false</IgnoreMethods>
    <BeforeParsingReplacementRules>
      <Item>
        <Key>
          <string>param(\d+)</string>
        </Key>
        <Value>
          <string>arg$1</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>_loc_(\d+)</string>
        </Key>
        <Value>
          <string>loc$1</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>(var\s|this\.)base(?![\w\d])</string>
        </Key>
        <Value>
          <string>$1@base</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>(var\s|this\.)object(?![\w\d])</string>
        </Key>
        <Value>
          <string>$1@object</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>(var\s|this\.)operator(?![\w\d])</string>
        </Key>
        <Value>
          <string>$1@operator</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>this\.</string>
        </Key>
        <Value>
          <string />
        </Value>
      </Item>
      <Item>
        <Key>
          <string>\bNetworkMessage</string>
        </Key>
        <Value>
          <string>Message</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>\bIDataOutput</string>
        </Key>
        <Value>
          <string>BigEndianWriter</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>\bIDataInput</string>
        </Key>
        <Value>
          <string>BigEndianReader</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>\bread(?!y)</string>
        </Key>
        <Value>
          <string>Read</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>\bwrite</string>
        </Key>
        <Value>
          <string>Write</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>(Write|Read)Unsigned([^B])</string>
        </Key>
        <Value>
          <string>$1U$2</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>ReadByte</string>
        </Key>
        <Value>
          <string>ReadSByte</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>ReadUnsignedByte</string>
        </Key>
        <Value>
          <string>ReadByte</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>flash\.geom\.</string>
        </Key>
        <Value>
          <string />
        </Value>
      </Item>
      <Item>
        <Key>
          <string>Vector\.([\w_\d]+) = new ([\w_\d]+)();</string>
        </Key>
        <Value>
          <string>$1 = new List&lt;$2&gt;();</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>new Vector\.&lt;([\d\w]+)&gt;\((\d+), (true|false)\)</string>
        </Key>
        <Value>
          <string>new List&lt;$1&gt;($2)</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>new Vector\.&lt;([\d\w]+)&gt;</string>
        </Key>
        <Value>
          <string>new List&lt;$1&gt;()</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>(__AS3__\.vec\.)?Vector\.</string>
        </Key>
        <Value>
          <string>List</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>\.push\(</string>
        </Key>
        <Value>
          <string>.Add(</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>\.length</string>
        </Key>
        <Value>
          <string>.Count</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>super\.</string>
        </Key>
        <Value>
          <string>base.</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>\b(\w+)Enum\.</string>
        </Key>
        <Value>
          <string>(byte)Enums.$1Enum.</string>
        </Value>
      </Item>
    </BeforeParsingReplacementRules>
  </ParsingProfile>
  <ParsingProfile xsi:type="MessagesProfile">
    <Name>Messages classes</Name>
    <SourcePath>com/ankamagames/dofus/network/messages/</SourcePath>
    <OutPutPath>messages/</OutPutPath>
    <OutPutNamespace>.Messages</OutPutNamespace>
    <EnableParsing>false</EnableParsing>
    <IgnoreMethods>false</IgnoreMethods>
  </ParsingProfile>
  <ParsingProfile xsi:type="TypesProfile">
    <Name>Types classes</Name>
    <SourcePath>com/ankamagames/dofus/network/types/</SourcePath>
    <OutPutPath>types/</OutPutPath>
    <OutPutNamespace>.Types</OutPutNamespace>
    <EnableParsing>false</EnableParsing>
    <IgnoreMethods>false</IgnoreMethods>
  </ParsingProfile>
  <ParsingProfile xsi:type="EnumsProfile">
    <Name>Enums</Name>
    <SourcePath>com/ankamagames/dofus/network/enums/</SourcePath>
    <OutPutPath>enums/</OutPutPath>
    <OutPutNamespace>.Enums</OutPutNamespace>
    <EnableParsing>true</EnableParsing>
    <IgnoreMethods>false</IgnoreMethods>
  </ParsingProfile>
  <ParsingProfile xsi:type="DatacenterProfile">
    <Name>D2O Data classes</Name>
    <SourcePath>com/ankamagames/dofus/datacenter/</SourcePath>
    <OutPutPath>d2oclasses/</OutPutPath>
    <OutPutNamespace>.D2oClasses</OutPutNamespace>
    <EnableParsing>true</EnableParsing>
    <IgnoreMethods>true</IgnoreMethods>
    <BeforeParsingReplacementRules>
      <Item>
        <Key>
          <string>(var\s|this\.)base(?![\w\d])</string>
        </Key>
        <Value>
          <string>$1@base</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>(var\s|this\.)object(?![\w\d])</string>
        </Key>
        <Value>
          <string>$1@object</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>(var\s|this\.)operator(?![\w\d])</string>
        </Key>
        <Value>
          <string>$1@operator</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>(var\s|this\.)params(?![\w\d])</string>
        </Key>
        <Value>
          <string>$1@params</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>Vector\.([\w_\d]+) = new ([\w_\d]+)();</string>
        </Key>
        <Value>
          <string>$1 = new List&lt;$2&gt;();</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>new Vector\.&lt;([\d\w]+)&gt;\((\d+), (true|false)\)</string>
        </Key>
        <Value>
          <string>new List&lt;$1&gt;($2)</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>new Vector\.&lt;([\d\w]+)&gt;</string>
        </Key>
        <Value>
          <string>new List&lt;$1&gt;()</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>(__AS3__\.vec\.)?Vector\.</string>
        </Key>
        <Value>
          <string>List</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>\.push\(</string>
        </Key>
        <Value>
          <string>.Add(</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>\.length</string>
        </Key>
        <Value>
          <string>.Count</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>\bNumber</string>
        </Key>
        <Value>
          <string>float</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>static const</string>
        </Key>
        <Value>
          <string>const</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>const OPERATORS_LIST:Array\s?=\s?\[([^\]]+)\]</string>
        </Key>
        <Value>
          <string>readonly static OPERATORS_LIST:Array=new string[]{$1}</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>protected var _zoneSize</string>
        </Key>
        <Value>
          <string>public var zoneSize</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>protected var _zoneShape</string>
        </Key>
        <Value>
          <string>public var zoneShape</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>protected var _rawZone</string>
        </Key>
        <Value>
          <string>public var rawZone</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>private var _weight</string>
        </Key>
        <Value>
          <string>public var weight</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>private var _type</string>
        </Key>
        <Value>
          <string>public var type</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>private var _oldValue</string>
        </Key>
        <Value>
          <string>public var oldValue</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>private var _newValue</string>
        </Key>
        <Value>
          <string>public var newValue</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>private var _lang</string>
        </Key>
        <Value>
          <string>public var lang</string>
        </Value>
      </Item>
      <Item>
        <Key>
          <string>public var iconId:uint</string>
        </Key>
        <Value>
          <string>public var iconId:int</string>
        </Value>
      </Item>
    </BeforeParsingReplacementRules>
  </ParsingProfile>
</ArrayOfParsingProfile>