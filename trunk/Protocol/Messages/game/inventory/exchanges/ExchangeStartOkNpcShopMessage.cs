// File generated by 'DofusProtocolBuilder.exe v1.0.0.0'
// From 'ExchangeStartOkNpcShopMessage.xml' the '27/06/2012 15:55:11'
using System;
using BiM.Core.IO;
using System.Collections.Generic;
using System.Linq;
using BiM.Core.Network;

namespace BiM.Protocol.Messages
{
	public class ExchangeStartOkNpcShopMessage : NetworkMessage
	{
		public const uint Id = 5761;
		public override uint MessageId
		{
			get
			{
				return 5761;
			}
		}
		
		public int npcSellerId;
		public int tokenId;
		public Types.ObjectItemToSellInNpcShop[] objectsInfos;
		
		public ExchangeStartOkNpcShopMessage()
		{
		}
		
		public ExchangeStartOkNpcShopMessage(int npcSellerId, int tokenId, Types.ObjectItemToSellInNpcShop[] objectsInfos)
		{
			this.npcSellerId = npcSellerId;
			this.tokenId = tokenId;
			this.objectsInfos = objectsInfos;
		}
		
		public override void Serialize(IDataWriter writer)
		{
			writer.WriteInt(npcSellerId);
			writer.WriteInt(tokenId);
			writer.WriteUShort((ushort)objectsInfos.Count());
			foreach (var entry in objectsInfos)
			{
				entry.Serialize(writer);
			}
		}
		
		public override void Deserialize(IDataReader reader)
		{
			npcSellerId = reader.ReadInt();
			tokenId = reader.ReadInt();
			if ( tokenId < 0 )
			{
				throw new Exception("Forbidden value on tokenId = " + tokenId + ", it doesn't respect the following condition : tokenId < 0");
			}
			int limit = reader.ReadUShort();
			objectsInfos = new Types.ObjectItemToSellInNpcShop[limit];
			for (int i = 0; i < limit; i++)
			{
				(objectsInfos as Types.ObjectItemToSellInNpcShop[])[i] = new Types.ObjectItemToSellInNpcShop();
				(objectsInfos as Types.ObjectItemToSellInNpcShop[])[i].Deserialize(reader);
			}
		}
	}
}
